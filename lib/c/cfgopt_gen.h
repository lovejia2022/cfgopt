/*
Generated by cfgopt, DO NOT EDIT.

This is both header and source file. Define CFGOPT_IMPL before include
this header file makes this a source file.
*/

#ifndef CFGOPT_sample_H_
#define CFGOPT_sample_H_

#include <stdbool.h>
#include <stdint.h>

#include "cfgopt.h"

struct cfgopt_args {
	bool cfg_boolean_flag;
	int64_t cfg_int64_flag;
	double cfg_float64_flag;
	char const * cfg_string_flag;
};

void cfgopt_args_init(struct cfgopt_args * cfg);

struct cfgopt_result cfgopt_args_parse(
	struct cfgopt_args * cfg,
	int argc,
	char const **argv);

#endif // CFGOPT_sample_H_

#ifdef CFGOPT_IMPL

#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void cfgopt_args_init(struct cfgopt_args * cfg)
{
	cfg->cfg_boolean_flag = false;
	cfg->cfg_int64_flag = 0;
	cfg->cfg_float64_flag = 0.0;
	cfg->cfg_string_flag = NULL;
}

struct cfgopt_result cfgopt_args_parse(
	struct cfgopt_args * cfg,
	int argc,
	char const **argv)
{
	struct flag_info flag_infos[] = {
		{
			.name = "boolean_flag",
			.type = FLAG_BOOLEAN,
			.value = &cfg->cfg_boolean_flag
		},
		{
			.name = "int64_flag",
			.type = FLAG_INT64,
			.value = &cfg->cfg_int64_flag
		},
		{
			.name = "float64_flag",
			.type = FLAG_FLOAT64,
			.value = &cfg->cfg_float64_flag
		},
		{
			.name = "string_flag",
			.type = FLAG_STRING,
			.value = &cfg->cfg_string_flag
		},
	};

	struct parser p = new_parser(argv, argc);
	return parse(&p, flag_infos, 4);
}

#endif // CFGOPT_IMPL